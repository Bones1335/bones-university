// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users_programs.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createStudentsProgram = `-- name: CreateStudentsProgram :one
INSERT INTO users_programs (
  users_program_id,
  cohort_year,
  start_date,
  student_id,
  program_id,
  academic_year_id
)
VALUES (
  gen_random_uuid(),
  $1,
  $2,
  $3,
  $4,
  $5
)
RETURNING users_program_id, cohort_year, start_date, student_id, program_id, academic_year_id
`

type CreateStudentsProgramParams struct {
	CohortYear     int32     `json:"cohort_year"`
	StartDate      time.Time `json:"start_date"`
	StudentID      uuid.UUID `json:"student_id"`
	ProgramID      uuid.UUID `json:"program_id"`
	AcademicYearID uuid.UUID `json:"academic_year_id"`
}

func (q *Queries) CreateStudentsProgram(ctx context.Context, arg CreateStudentsProgramParams) (UsersProgram, error) {
	row := q.db.QueryRowContext(ctx, createStudentsProgram,
		arg.CohortYear,
		arg.StartDate,
		arg.StudentID,
		arg.ProgramID,
		arg.AcademicYearID,
	)
	var i UsersProgram
	err := row.Scan(
		&i.UsersProgramID,
		&i.CohortYear,
		&i.StartDate,
		&i.StudentID,
		&i.ProgramID,
		&i.AcademicYearID,
	)
	return i, err
}
