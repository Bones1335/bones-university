// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: courses.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createCourses = `-- name: CreateCourses :one
INSERT INTO courses (
  courses_id,
  created_at,
  updated_at,
  course_code,
  course_name,
  course_description,
  course_professor_id
)
VALUES (
  gen_random_uuid(),
  NOW(),
  NOW(),
  $1,
  $2,
  $3,
  $4
)
RETURNING courses_id, created_at, updated_at, course_code, course_name, course_description, course_professor_id
`

type CreateCoursesParams struct {
	CourseCode        string    `json:"course_code"`
	CourseName        string    `json:"course_name"`
	CourseDescription string    `json:"course_description"`
	CourseProfessorID uuid.UUID `json:"course_professor_id"`
}

func (q *Queries) CreateCourses(ctx context.Context, arg CreateCoursesParams) (Course, error) {
	row := q.db.QueryRowContext(ctx, createCourses,
		arg.CourseCode,
		arg.CourseName,
		arg.CourseDescription,
		arg.CourseProfessorID,
	)
	var i Course
	err := row.Scan(
		&i.CoursesID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.CourseCode,
		&i.CourseName,
		&i.CourseDescription,
		&i.CourseProfessorID,
	)
	return i, err
}
