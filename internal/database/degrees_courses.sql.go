// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: degrees_courses.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createDegreesCourse = `-- name: CreateDegreesCourse :one
INSERT INTO degrees_courses (
  degrees_courses_id,
  created_at,
  updated_at,
  degree_id,
  course_id
)
VALUES (
  gen_random_uuid(),
  NOW(),
  NOW(),
  $1,
  $2
)
RETURNING degrees_courses_id, created_at, updated_at, degree_id, course_id
`

type CreateDegreesCourseParams struct {
	DegreeID uuid.UUID `json:"degree_id"`
	CourseID uuid.UUID `json:"course_id"`
}

func (q *Queries) CreateDegreesCourse(ctx context.Context, arg CreateDegreesCourseParams) (DegreesCourse, error) {
	row := q.db.QueryRowContext(ctx, createDegreesCourse, arg.DegreeID, arg.CourseID)
	var i DegreesCourse
	err := row.Scan(
		&i.DegreesCoursesID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DegreeID,
		&i.CourseID,
	)
	return i, err
}
